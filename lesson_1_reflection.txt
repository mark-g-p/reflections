How did viewing a diff between two versions of a file help you see the bug that
was introduced?

 It showed only parts of the files that were different.	

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It's easier to control the project that way. Which also means it's easier to debug.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

   Cons: all responsibility is on the programmer. Pros: you actually control everything that happens with your code.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git commits usually belong to the same project. In case of GD you usually have loosely related files

How can you use the commands git log and git diff to view the history of files?

   It allows me to compare two commits by searching desired phrase. 

How might using version control make you more confident to make changes that
could break something?

    Even after introducing large error to code with version control it is possible to reverse code to a working state.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to start my own Ruby project. Also this will be useful for Android Developer course on Udacity. 
